name: RESEARKA Token CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Smart Contracts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Solhint
        run: npx solhint 'contracts/**/*.sol'
      - name: Run ESLint
        run: npx eslint '**/*.js'
      - name: Compile contracts
        run: npx hardhat compile
      - name: Run tests
        run: npx hardhat test
      - name: Run coverage
        run: npx hardhat coverage
      - name: Check coverage thresholds
        run: |
          echo "Checking coverage thresholds..."
          npx istanbul check-coverage --statements 90 --branches 80 --functions 90 --lines 90
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/
          fail_ci_if_error: false

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer solc-select
          solc-select install 0.8.20
          solc-select use 0.8.20
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Compile contracts
        run: npx hardhat compile
      - name: Run Slither
        run: |
          slither . --json slither-report.json --exclude-dependencies
          if [ "$(cat slither-report.json | jq '.results.detectors[] | select(.impact=="High" or .impact=="Medium")' | wc -l)" -gt 0 ]; then
            echo "Critical or high severity issues found!"
            cat slither-report.json | jq '.results.detectors[] | select(.impact=="High" or .impact=="Medium")'
            exit 1
          fi
      - name: Upload Slither report
        uses: actions/upload-artifact@v3
        with:
          name: slither-report
          path: slither-report.json
      - name: Scan for hardcoded secrets
        run: |
          grep -r -i -E "0x[a-fA-F0-9]{40}|private|secret|key|password" --include="*.sol" --include="*.js" . || true
          echo "Check the logs for any potential hardcoded secrets or sensitive information"

  check-lock-files:
    name: Verify Package Integrity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check for changes in package-lock.json
        run: |
          if [ -f "package-lock.json" ]; then
            echo "Verifying package-lock.json integrity..."
            npm ci
            git diff --exit-code package-lock.json || (echo "Warning: package-lock.json would be modified by npm ci" && exit 1)
          fi
